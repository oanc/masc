
use java.lang.String as String;
use java.lang.Object as Object;
use java.net.URL  as URL;
use java.io.File  as File;
use gate.FeatureMap as FeatureMap;
use gate.Document as Document;
use gate.Corpus as Corpus;
use gate.persist.SerialDataStore as DataStore;

resource load_standoff = org.anc.gate.LoadGrafStandoff
{
	name = "Load GrAF Standoff";
}

String dataStorePath = null;
String sourceDir = null;
String annotationType = null;

void main(string[] args)
{
	if (length(args) != 3)
	{
		println("USAGE");
		println("xoro load-corpus.xoro <datastore> <sourceDir> <type>");
		println("");
		println("EXAMPLE");
		println("   xoro load-corpus.xoro d:/corpora/masc/gate-datastore d:/corpora/masc/for-release/data logical");
		exit;
	}
	dataStorePath = "file:/" + args[0];
	sourceDir = args[1];
	annotationType = args[2];

	load(load_standoff);
	DataStore ds = new DataStore(dataStorePath);
	ds.open();
	FeatureMap fm = Factory.newFeatureMap();
	fm.put("name", "MASC");
	Corpus corpus = Factory.createResource("gate.corpora.CorpusImpl", fm);

	File root = new File(sourceDir);
	File[] files = root.listFiles();
	int n = length(files);
	for (int i = 0; i < n; ++i)
	{
		File f = files[i];
		String filename = f.getPath();
		if (filename.endsWith(".txt"))
		{
			Document doc = LoadDocument(filename);
			corpus.add(doc);
		}
	}
	Object lr = ds.adopt(corpus, null);
	ds.sync(lr);
}

Document LoadDocument(String path)
{
	println("Loading " + path);
	String ext = "-" + annotationType + ".xml";
	String soPath = path.replaceAll(".txt", ext);
	Document doc = Factory.newDocument(new URL("file:/" + path));
	load_standoff.setDocument(doc);
	load_standoff.setSourceUrl(new URL("file:/" + soPath));
	load_standoff.execute();
	return doc;
}
