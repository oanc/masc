import org.xces.graf.api.*
import org.xces.graf.io.*
import org.xces.graf.io.dom.*

if (this.args.size() != 1)
{
	println "USAGE: grate check-nc.gr8 /path/to/corpus"
	return
}

File corpus = new File(this.args[0])
if (!corpus.exists())
{
	println "Corpus directory not found."
	return;
}

File data = new File(corpus, "data")
File headerFile = new File(corpus, "resource-header.xml")
int nchunks = 0
int toks = 0
int files = 0

GrafParser parser = new GrafParser(new ResourceHeader(headerFile))
data.eachDirRecurse { dir ->
	dir.eachFileMatch(~/.*-nc.xml/) { file ->
		++files
		println "Parsing ${file.name}"
		IGraph graph = parser.parse(file)
		IStandoffHeader soheader = graph.getHeader()
		for (String label : soheader.labels)
		{
			if ("nchunk".equals(label))
			{
				++nchunks
			}
			else if ("tok".equals(label))
			{
				++toks
			}
			else
			{
				println "Invalid label found : ${label}"
			}
		}
	}
}

println "Files: ${files}"
println "Chunks: ${nchunks}"
println "Tokens: ${toks}"
